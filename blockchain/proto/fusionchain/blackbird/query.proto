syntax = "proto3";
package fusionchain.blackbird;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
// import "cosmos/base/query/v1beta1/pagination.proto";
import "fusionchain/blackbird/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/qredo/fusionchain/x/blackbird/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/fusionchain/blackbird/params";
  }
  // Queries a list of Verify items.
  rpc Verify(QueryVerifyRequest) returns (QueryVerifyResponse) {
    option (google.api.http).get =
        "/fusionchain/blackbird/verify/{policy}/{payload}";
  }

  // this line is used by starport scaffolding # 1
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryVerifyRequest {
  string policy = 1;
  string payload = 2;
}

message QueryVerifyResponse { bool result = 1; }

// this line is used by starport scaffolding # 3
