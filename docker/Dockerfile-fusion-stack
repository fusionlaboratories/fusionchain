# LEGACY DOCKERFILE. WILL REMOVE IN A FUTURE PR
FROM --platform=linux/amd64 golang:1.21-alpine3.18 AS build-env
ARG ARCH=x86_64
ARG arch=$ARCH

# Set up dependencies
ENV PACKAGES git build-base

# Set working directory for the build
WORKDIR /go/src/github.com/qredo/fusionchain

# Install dependencies
RUN apk add --update $PACKAGES
RUN apk add linux-headers

# Set up Qredo private repos access
ARG GITLAB_TOKEN
ARG GITHUB_TOKEN
ENV arch=$ARCH
ENV GOPRIVATE=github.com/qredo,gitlab.qredo.com
RUN git config --global url."https://gitlab-ci-token:$GITLAB_TOKEN@gitlab.qredo.com".insteadOf "https://gitlab.qredo.com"
RUN git config --global url."https://$GITHUB_TOKEN@github.com".insteadOf "https://github.com"

# Add libwasmvm for musl
# Run `grep wasmvm go.mod` to find the version used in the project.
# Download checksum.txt from https://github.com/CosmWasm/wasmvm/releases to find correct checksums.
ENV WASMVM_VERSION=v1.4.0
ADD https://github.com/CosmWasm/wasmvm/releases/download/$WASMVM_VERSION/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a
ADD https://github.com/CosmWasm/wasmvm/releases/download/$WASMVM_VERSION/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a
RUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 2a72c7062e3c791792b3dab781c815c9a76083a7997ce6f9f2799aaf577f3c25
RUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep 8ea2e3b5fae83e671da2bb51115adc88591045953f509955ec38dc02ea5a7b94

RUN cp /lib/libwasmvm_muslc.${arch}.a /lib/libwasmvm_muslc.a

## mokr

FROM build-env AS mokr-build
WORKDIR /fusionchain
COPY . .
WORKDIR /fusionchain/mokr
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -o mokr -tags "muslc" -ldflags '-linkmode=external -extldflags "-Wl,-z,muldefs -static"' .


FROM alpine:3.18.0 AS mokr
RUN apk add --update ca-certificates jq
COPY --from=mokr-build /fusionchain/mokr/mokr /usr/bin/mokr
CMD ["mokr"]

## relayer-eth

FROM build-env AS relayer-eth-build
WORKDIR /fusionchain
COPY . .
WORKDIR /fusionchain/relayer-eth
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -o relayer -tags "muslc" -ldflags '-linkmode=external -extldflags "-Wl,-z,muldefs -static"' ./cmd/relayer


FROM alpine:3.18.0 AS relayer-eth
RUN apk add --update ca-certificates jq
COPY --from=relayer-eth-build /fusionchain/relayer-eth/relayer /usr/bin/relayer
CMD ["relayer"]

## fusiond

FROM build-env AS fusiond-build
WORKDIR /fusionchain
COPY . .
WORKDIR /fusionchain/blockchain
ENV BUILD_TAGS=muslc LINK_STATICALLY=true
RUN --mount=type=bind,source=.git,target=.git \
    --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    make build
FROM alpine:3.18.0 AS fusiond
RUN apk add --update ca-certificates jq
WORKDIR /
COPY --from=fusiond-build /fusionchain/blockchain/build/fusiond /usr/bin/fusiond
CMD ["fusiond", "start"]


## faucet

FROM alpine:3.18.0 as faucet
COPY --from=fusiond-build /fusionchain/blockchain/build/fusiond /usr/bin/fusiond
COPY --from=fusiond-build /fusionchain/blockchain/build/faucet /usr/bin/faucet
EXPOSE 8000
CMD ["/usr/bin/faucet"]
