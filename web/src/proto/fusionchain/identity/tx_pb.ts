// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file fusionchain/identity/tx.proto (package fusionchain.identity, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { KeyringFees } from "./keyring_pb.js";

/**
 * @generated from message fusionchain.identity.MsgNewWorkspace
 */
export class MsgNewWorkspace extends Message<MsgNewWorkspace> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 admin_policy_id = 2;
   */
  adminPolicyId = protoInt64.zero;

  /**
   * @generated from field: uint64 sign_policy_id = 3;
   */
  signPolicyId = protoInt64.zero;

  /**
   * @generated from field: repeated string additional_owners = 4;
   */
  additionalOwners: string[] = [];

  constructor(data?: PartialMessage<MsgNewWorkspace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgNewWorkspace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "admin_policy_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "sign_policy_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "additional_owners", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgNewWorkspace {
    return new MsgNewWorkspace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgNewWorkspace {
    return new MsgNewWorkspace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgNewWorkspace {
    return new MsgNewWorkspace().fromJsonString(jsonString, options);
  }

  static equals(a: MsgNewWorkspace | PlainMessage<MsgNewWorkspace> | undefined, b: MsgNewWorkspace | PlainMessage<MsgNewWorkspace> | undefined): boolean {
    return proto3.util.equals(MsgNewWorkspace, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgNewWorkspaceResponse
 */
export class MsgNewWorkspaceResponse extends Message<MsgNewWorkspaceResponse> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  constructor(data?: PartialMessage<MsgNewWorkspaceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgNewWorkspaceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgNewWorkspaceResponse {
    return new MsgNewWorkspaceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgNewWorkspaceResponse {
    return new MsgNewWorkspaceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgNewWorkspaceResponse {
    return new MsgNewWorkspaceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgNewWorkspaceResponse | PlainMessage<MsgNewWorkspaceResponse> | undefined, b: MsgNewWorkspaceResponse | PlainMessage<MsgNewWorkspaceResponse> | undefined): boolean {
    return proto3.util.equals(MsgNewWorkspaceResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgAddWorkspaceOwner
 */
export class MsgAddWorkspaceOwner extends Message<MsgAddWorkspaceOwner> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string workspace_addr = 2;
   */
  workspaceAddr = "";

  /**
   * @generated from field: string new_owner = 3;
   */
  newOwner = "";

  /**
   * @generated from field: uint64 btl = 4;
   */
  btl = protoInt64.zero;

  constructor(data?: PartialMessage<MsgAddWorkspaceOwner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgAddWorkspaceOwner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "new_owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "btl", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddWorkspaceOwner {
    return new MsgAddWorkspaceOwner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddWorkspaceOwner {
    return new MsgAddWorkspaceOwner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddWorkspaceOwner {
    return new MsgAddWorkspaceOwner().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddWorkspaceOwner | PlainMessage<MsgAddWorkspaceOwner> | undefined, b: MsgAddWorkspaceOwner | PlainMessage<MsgAddWorkspaceOwner> | undefined): boolean {
    return proto3.util.equals(MsgAddWorkspaceOwner, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgAddWorkspaceOwnerResponse
 */
export class MsgAddWorkspaceOwnerResponse extends Message<MsgAddWorkspaceOwnerResponse> {
  constructor(data?: PartialMessage<MsgAddWorkspaceOwnerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgAddWorkspaceOwnerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddWorkspaceOwnerResponse {
    return new MsgAddWorkspaceOwnerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddWorkspaceOwnerResponse {
    return new MsgAddWorkspaceOwnerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddWorkspaceOwnerResponse {
    return new MsgAddWorkspaceOwnerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddWorkspaceOwnerResponse | PlainMessage<MsgAddWorkspaceOwnerResponse> | undefined, b: MsgAddWorkspaceOwnerResponse | PlainMessage<MsgAddWorkspaceOwnerResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddWorkspaceOwnerResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgRemoveWorkspaceOwner
 */
export class MsgRemoveWorkspaceOwner extends Message<MsgRemoveWorkspaceOwner> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string workspace_addr = 2;
   */
  workspaceAddr = "";

  /**
   * @generated from field: string owner = 3;
   */
  owner = "";

  /**
   * @generated from field: uint64 btl = 4;
   */
  btl = protoInt64.zero;

  constructor(data?: PartialMessage<MsgRemoveWorkspaceOwner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgRemoveWorkspaceOwner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "btl", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveWorkspaceOwner {
    return new MsgRemoveWorkspaceOwner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveWorkspaceOwner {
    return new MsgRemoveWorkspaceOwner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveWorkspaceOwner {
    return new MsgRemoveWorkspaceOwner().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveWorkspaceOwner | PlainMessage<MsgRemoveWorkspaceOwner> | undefined, b: MsgRemoveWorkspaceOwner | PlainMessage<MsgRemoveWorkspaceOwner> | undefined): boolean {
    return proto3.util.equals(MsgRemoveWorkspaceOwner, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgRemoveWorkspaceOwnerResponse
 */
export class MsgRemoveWorkspaceOwnerResponse extends Message<MsgRemoveWorkspaceOwnerResponse> {
  constructor(data?: PartialMessage<MsgRemoveWorkspaceOwnerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgRemoveWorkspaceOwnerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveWorkspaceOwnerResponse {
    return new MsgRemoveWorkspaceOwnerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveWorkspaceOwnerResponse {
    return new MsgRemoveWorkspaceOwnerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveWorkspaceOwnerResponse {
    return new MsgRemoveWorkspaceOwnerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveWorkspaceOwnerResponse | PlainMessage<MsgRemoveWorkspaceOwnerResponse> | undefined, b: MsgRemoveWorkspaceOwnerResponse | PlainMessage<MsgRemoveWorkspaceOwnerResponse> | undefined): boolean {
    return proto3.util.equals(MsgRemoveWorkspaceOwnerResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgNewKeyring
 */
export class MsgNewKeyring extends Message<MsgNewKeyring> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: uint64 admin_policy_id = 3;
   */
  adminPolicyId = protoInt64.zero;

  /**
   * @generated from field: fusionchain.identity.KeyringFees fees = 4;
   */
  fees?: KeyringFees;

  constructor(data?: PartialMessage<MsgNewKeyring>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgNewKeyring";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "admin_policy_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "fees", kind: "message", T: KeyringFees },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgNewKeyring {
    return new MsgNewKeyring().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgNewKeyring {
    return new MsgNewKeyring().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgNewKeyring {
    return new MsgNewKeyring().fromJsonString(jsonString, options);
  }

  static equals(a: MsgNewKeyring | PlainMessage<MsgNewKeyring> | undefined, b: MsgNewKeyring | PlainMessage<MsgNewKeyring> | undefined): boolean {
    return proto3.util.equals(MsgNewKeyring, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgNewKeyringResponse
 */
export class MsgNewKeyringResponse extends Message<MsgNewKeyringResponse> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  constructor(data?: PartialMessage<MsgNewKeyringResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgNewKeyringResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgNewKeyringResponse {
    return new MsgNewKeyringResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgNewKeyringResponse {
    return new MsgNewKeyringResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgNewKeyringResponse {
    return new MsgNewKeyringResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgNewKeyringResponse | PlainMessage<MsgNewKeyringResponse> | undefined, b: MsgNewKeyringResponse | PlainMessage<MsgNewKeyringResponse> | undefined): boolean {
    return proto3.util.equals(MsgNewKeyringResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgAddKeyringParty
 */
export class MsgAddKeyringParty extends Message<MsgAddKeyringParty> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string keyring_addr = 2;
   */
  keyringAddr = "";

  /**
   * @generated from field: string party = 3;
   */
  party = "";

  constructor(data?: PartialMessage<MsgAddKeyringParty>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgAddKeyringParty";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "keyring_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "party", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddKeyringParty {
    return new MsgAddKeyringParty().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddKeyringParty {
    return new MsgAddKeyringParty().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddKeyringParty {
    return new MsgAddKeyringParty().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddKeyringParty | PlainMessage<MsgAddKeyringParty> | undefined, b: MsgAddKeyringParty | PlainMessage<MsgAddKeyringParty> | undefined): boolean {
    return proto3.util.equals(MsgAddKeyringParty, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgAddKeyringPartyResponse
 */
export class MsgAddKeyringPartyResponse extends Message<MsgAddKeyringPartyResponse> {
  constructor(data?: PartialMessage<MsgAddKeyringPartyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgAddKeyringPartyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddKeyringPartyResponse {
    return new MsgAddKeyringPartyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddKeyringPartyResponse {
    return new MsgAddKeyringPartyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddKeyringPartyResponse {
    return new MsgAddKeyringPartyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddKeyringPartyResponse | PlainMessage<MsgAddKeyringPartyResponse> | undefined, b: MsgAddKeyringPartyResponse | PlainMessage<MsgAddKeyringPartyResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddKeyringPartyResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgAppendChildWorkspace
 */
export class MsgAppendChildWorkspace extends Message<MsgAppendChildWorkspace> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string parent_workspace_addr = 2;
   */
  parentWorkspaceAddr = "";

  /**
   * @generated from field: string child_workspace_addr = 3;
   */
  childWorkspaceAddr = "";

  /**
   * @generated from field: uint64 btl = 4;
   */
  btl = protoInt64.zero;

  constructor(data?: PartialMessage<MsgAppendChildWorkspace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgAppendChildWorkspace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "parent_workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "child_workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "btl", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAppendChildWorkspace {
    return new MsgAppendChildWorkspace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAppendChildWorkspace {
    return new MsgAppendChildWorkspace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAppendChildWorkspace {
    return new MsgAppendChildWorkspace().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAppendChildWorkspace | PlainMessage<MsgAppendChildWorkspace> | undefined, b: MsgAppendChildWorkspace | PlainMessage<MsgAppendChildWorkspace> | undefined): boolean {
    return proto3.util.equals(MsgAppendChildWorkspace, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgAppendChildWorkspaceResponse
 */
export class MsgAppendChildWorkspaceResponse extends Message<MsgAppendChildWorkspaceResponse> {
  constructor(data?: PartialMessage<MsgAppendChildWorkspaceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgAppendChildWorkspaceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAppendChildWorkspaceResponse {
    return new MsgAppendChildWorkspaceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAppendChildWorkspaceResponse {
    return new MsgAppendChildWorkspaceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAppendChildWorkspaceResponse {
    return new MsgAppendChildWorkspaceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAppendChildWorkspaceResponse | PlainMessage<MsgAppendChildWorkspaceResponse> | undefined, b: MsgAppendChildWorkspaceResponse | PlainMessage<MsgAppendChildWorkspaceResponse> | undefined): boolean {
    return proto3.util.equals(MsgAppendChildWorkspaceResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgNewChildWorkspace
 */
export class MsgNewChildWorkspace extends Message<MsgNewChildWorkspace> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string parent_workspace_addr = 2;
   */
  parentWorkspaceAddr = "";

  /**
   * @generated from field: uint64 btl = 3;
   */
  btl = protoInt64.zero;

  constructor(data?: PartialMessage<MsgNewChildWorkspace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgNewChildWorkspace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "parent_workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "btl", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgNewChildWorkspace {
    return new MsgNewChildWorkspace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgNewChildWorkspace {
    return new MsgNewChildWorkspace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgNewChildWorkspace {
    return new MsgNewChildWorkspace().fromJsonString(jsonString, options);
  }

  static equals(a: MsgNewChildWorkspace | PlainMessage<MsgNewChildWorkspace> | undefined, b: MsgNewChildWorkspace | PlainMessage<MsgNewChildWorkspace> | undefined): boolean {
    return proto3.util.equals(MsgNewChildWorkspace, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgNewChildWorkspaceResponse
 */
export class MsgNewChildWorkspaceResponse extends Message<MsgNewChildWorkspaceResponse> {
  constructor(data?: PartialMessage<MsgNewChildWorkspaceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgNewChildWorkspaceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgNewChildWorkspaceResponse {
    return new MsgNewChildWorkspaceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgNewChildWorkspaceResponse {
    return new MsgNewChildWorkspaceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgNewChildWorkspaceResponse {
    return new MsgNewChildWorkspaceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgNewChildWorkspaceResponse | PlainMessage<MsgNewChildWorkspaceResponse> | undefined, b: MsgNewChildWorkspaceResponse | PlainMessage<MsgNewChildWorkspaceResponse> | undefined): boolean {
    return proto3.util.equals(MsgNewChildWorkspaceResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgUpdateWorkspace
 */
export class MsgUpdateWorkspace extends Message<MsgUpdateWorkspace> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string workspace_addr = 2;
   */
  workspaceAddr = "";

  /**
   * @generated from field: uint64 admin_policy_id = 3;
   */
  adminPolicyId = protoInt64.zero;

  /**
   * @generated from field: uint64 sign_policy_id = 4;
   */
  signPolicyId = protoInt64.zero;

  /**
   * @generated from field: uint64 btl = 5;
   */
  btl = protoInt64.zero;

  constructor(data?: PartialMessage<MsgUpdateWorkspace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgUpdateWorkspace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "admin_policy_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sign_policy_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "btl", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateWorkspace {
    return new MsgUpdateWorkspace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateWorkspace {
    return new MsgUpdateWorkspace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateWorkspace {
    return new MsgUpdateWorkspace().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateWorkspace | PlainMessage<MsgUpdateWorkspace> | undefined, b: MsgUpdateWorkspace | PlainMessage<MsgUpdateWorkspace> | undefined): boolean {
    return proto3.util.equals(MsgUpdateWorkspace, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgUpdateWorkspaceResponse
 */
export class MsgUpdateWorkspaceResponse extends Message<MsgUpdateWorkspaceResponse> {
  constructor(data?: PartialMessage<MsgUpdateWorkspaceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgUpdateWorkspaceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateWorkspaceResponse {
    return new MsgUpdateWorkspaceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateWorkspaceResponse {
    return new MsgUpdateWorkspaceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateWorkspaceResponse {
    return new MsgUpdateWorkspaceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateWorkspaceResponse | PlainMessage<MsgUpdateWorkspaceResponse> | undefined, b: MsgUpdateWorkspaceResponse | PlainMessage<MsgUpdateWorkspaceResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateWorkspaceResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgUpdateKeyring
 */
export class MsgUpdateKeyring extends Message<MsgUpdateKeyring> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string keyring_addr = 2;
   */
  keyringAddr = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: bool is_active = 4;
   */
  isActive = false;

  constructor(data?: PartialMessage<MsgUpdateKeyring>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgUpdateKeyring";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "keyring_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateKeyring {
    return new MsgUpdateKeyring().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateKeyring {
    return new MsgUpdateKeyring().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateKeyring {
    return new MsgUpdateKeyring().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateKeyring | PlainMessage<MsgUpdateKeyring> | undefined, b: MsgUpdateKeyring | PlainMessage<MsgUpdateKeyring> | undefined): boolean {
    return proto3.util.equals(MsgUpdateKeyring, a, b);
  }
}

/**
 * @generated from message fusionchain.identity.MsgUpdateKeyringResponse
 */
export class MsgUpdateKeyringResponse extends Message<MsgUpdateKeyringResponse> {
  constructor(data?: PartialMessage<MsgUpdateKeyringResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.identity.MsgUpdateKeyringResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateKeyringResponse {
    return new MsgUpdateKeyringResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateKeyringResponse {
    return new MsgUpdateKeyringResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateKeyringResponse {
    return new MsgUpdateKeyringResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateKeyringResponse | PlainMessage<MsgUpdateKeyringResponse> | undefined, b: MsgUpdateKeyringResponse | PlainMessage<MsgUpdateKeyringResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateKeyringResponse, a, b);
  }
}

