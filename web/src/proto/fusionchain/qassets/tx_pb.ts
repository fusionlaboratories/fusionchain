// @generated by protoc-gen-es v1.3.3 with parameter "target=ts"
// @generated from file fusionchain/qassets/tx.proto (package fusionchain.qassets, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message fusionchain.qassets.MsgMint
 */
export class MsgMint extends Message<MsgMint> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 from_wallet_id = 2;
   */
  fromWalletId = protoInt64.zero;

  /**
   * @generated from field: string to_workspace_addr = 3;
   */
  toWorkspaceAddr = "";

  /**
   * @generated from field: bool is_token = 4;
   */
  isToken = false;

  /**
   * @generated from field: string token_name = 5;
   */
  tokenName = "";

  /**
   * @generated from field: string token_contract_addr = 6;
   */
  tokenContractAddr = "";

  /**
   * @generated from field: uint64 amount = 7;
   */
  amount = protoInt64.zero;

  constructor(data?: PartialMessage<MsgMint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.qassets.MsgMint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "from_wallet_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "to_workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "is_token", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "token_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token_contract_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgMint {
    return new MsgMint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgMint {
    return new MsgMint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgMint {
    return new MsgMint().fromJsonString(jsonString, options);
  }

  static equals(a: MsgMint | PlainMessage<MsgMint> | undefined, b: MsgMint | PlainMessage<MsgMint> | undefined): boolean {
    return proto3.util.equals(MsgMint, a, b);
  }
}

/**
 * @generated from message fusionchain.qassets.MsgMintResponse
 */
export class MsgMintResponse extends Message<MsgMintResponse> {
  constructor(data?: PartialMessage<MsgMintResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.qassets.MsgMintResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgMintResponse {
    return new MsgMintResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgMintResponse {
    return new MsgMintResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgMintResponse {
    return new MsgMintResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgMintResponse | PlainMessage<MsgMintResponse> | undefined, b: MsgMintResponse | PlainMessage<MsgMintResponse> | undefined): boolean {
    return proto3.util.equals(MsgMintResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.qassets.MsgBurn
 */
export class MsgBurn extends Message<MsgBurn> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string from_workspace_addr = 2;
   */
  fromWorkspaceAddr = "";

  /**
   * @generated from field: uint64 to_wallet_id = 3;
   */
  toWalletId = protoInt64.zero;

  /**
   * @generated from field: bool is_token = 4;
   */
  isToken = false;

  /**
   * @generated from field: string token_name = 5;
   */
  tokenName = "";

  /**
   * @generated from field: string token_contract_addr = 6;
   */
  tokenContractAddr = "";

  /**
   * @generated from field: uint64 amount = 7;
   */
  amount = protoInt64.zero;

  constructor(data?: PartialMessage<MsgBurn>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.qassets.MsgBurn";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "from_workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "to_wallet_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "is_token", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "token_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token_contract_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgBurn {
    return new MsgBurn().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgBurn {
    return new MsgBurn().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgBurn {
    return new MsgBurn().fromJsonString(jsonString, options);
  }

  static equals(a: MsgBurn | PlainMessage<MsgBurn> | undefined, b: MsgBurn | PlainMessage<MsgBurn> | undefined): boolean {
    return proto3.util.equals(MsgBurn, a, b);
  }
}

/**
 * @generated from message fusionchain.qassets.MsgBurnResponse
 */
export class MsgBurnResponse extends Message<MsgBurnResponse> {
  constructor(data?: PartialMessage<MsgBurnResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.qassets.MsgBurnResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgBurnResponse {
    return new MsgBurnResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgBurnResponse {
    return new MsgBurnResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgBurnResponse {
    return new MsgBurnResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgBurnResponse | PlainMessage<MsgBurnResponse> | undefined, b: MsgBurnResponse | PlainMessage<MsgBurnResponse> | undefined): boolean {
    return proto3.util.equals(MsgBurnResponse, a, b);
  }
}

/**
 * @generated from message fusionchain.qassets.MsgSend
 */
export class MsgSend extends Message<MsgSend> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string from_workspace_addr = 2;
   */
  fromWorkspaceAddr = "";

  /**
   * @generated from field: string to_workspace_addr = 3;
   */
  toWorkspaceAddr = "";

  /**
   * @generated from field: string qasset_denom = 4;
   */
  qassetDenom = "";

  /**
   * @generated from field: uint64 amount = 5;
   */
  amount = protoInt64.zero;

  constructor(data?: PartialMessage<MsgSend>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.qassets.MsgSend";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "from_workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "to_workspace_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "qasset_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSend {
    return new MsgSend().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSend {
    return new MsgSend().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSend {
    return new MsgSend().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSend | PlainMessage<MsgSend> | undefined, b: MsgSend | PlainMessage<MsgSend> | undefined): boolean {
    return proto3.util.equals(MsgSend, a, b);
  }
}

/**
 * @generated from message fusionchain.qassets.MsgSendResponse
 */
export class MsgSendResponse extends Message<MsgSendResponse> {
  constructor(data?: PartialMessage<MsgSendResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fusionchain.qassets.MsgSendResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSendResponse {
    return new MsgSendResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSendResponse {
    return new MsgSendResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSendResponse {
    return new MsgSendResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSendResponse | PlainMessage<MsgSendResponse> | undefined, b: MsgSendResponse | PlainMessage<MsgSendResponse> | undefined): boolean {
    return proto3.util.equals(MsgSendResponse, a, b);
  }
}

